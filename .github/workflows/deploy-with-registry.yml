name: Build, Push to Registry & Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      imageTag:
        description: 'Image tag'
        required: true
        default: 'latest'

jobs:
  build_push_and_deploy:
    name: Build Image. Push to Containers Registry and Deploy to Droplet via SSH
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v3

      - name: Logging into Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_ADDRESS }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Prepare repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Prepare image tag
        run: |
          [ "${{ inputs.imageTag }}" == "" ] && imageTag="${{  github.ref_name }}" || imageTag="${{ inputs.imageTag }}"
          echo "IMAGE_TAG=${imageTag}" >>${GITHUB_ENV}

      - name: Pushing Image to Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: .docker/Dockerfile
          tags: ${{ secrets.REGISTRY_ADDRESS }}/${{ env.REPO }}:${{ env.IMAGE_TAG }},${{ secrets.REGISTRY_ADDRESS }}/${{ env.REPO }}:latest

      - name: Deploy to Droplet via SSH Action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            # Free up space
            docker image prune -f

            # Login to Container Registry
            docker login ${{ secrets.REGISTRY_ADDRESS }} -u '${{ secrets.REGISTRY_USERNAME }}' -p '${{ secrets.REGISTRY_TOKEN }}'

            # Pull the Docker Image 
            docker pull "${{ secrets.REGISTRY_ADDRESS }}/${{ env.REPO }}:latest"

            # Run a new container from a new image
            docker compose up -d eventio_server